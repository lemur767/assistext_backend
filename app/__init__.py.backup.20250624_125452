from flask import Flask
from flask_sqlalchemy import SQLAlchemy
from flask_jwt_extended import JWTManager
from flask_mail import Mail
from flask_restful import Api
from flask_cors import CORS
from flask_limiter import Limiter
from flask_limiter.util import get_remote_address
import os
import redis
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Initialize extensions
db = SQLAlchemy()
jwt = JWTManager()
mail = Mail()

def create_app(config_name='production'):
    """Application factory pattern"""
    app = Flask(__name__)
    
    # Load configuration
    if config_name == 'production':
        app.config.from_object('config.ProductionConfig')
    else:
        app.config.from_object('config.DevelopmentConfig')
    
    # Initialize extensions
    db.init_app(app)
    jwt.init_app(app)
    mail.init_app(app)
    
    # Enable CORS
    CORS(app, origins=["https://www.assitext.ca", "https://assitext.ca"])
    
    # Rate limiting
)
    
    # Register API routes
    api = Api(app)
    from app.api.auth import register_auth_routes
    register_auth_routes(api)
    
    # Health check endpoint
    @app.route('/health')
    def health_check():
        return {'status': 'healthy', 'service': 'assistext-backend'}, 200
    
    # Create database tables
    with app.app_context():
        db.create_all()
    
    return app

# Fixed Limiter configuration
from flask_limiter import Limiter
from flask_limiter.util import get_remote_address

)

# Fixed Limiter configuration
from flask_limiter import Limiter
from flask_limiter.util import get_remote_address

)
