"""fixed meta

Revision ID: 48feed60906d
Revises: d2f924302c45
Create Date: 2025-06-06 15:05:49.089692

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '48feed60906d'
down_revision = 'd2f924302c45'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscription_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price_monthly', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('price_yearly', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('stripe_price_id_monthly', sa.String(length=100), nullable=True),
    sa.Column('stripe_price_id_yearly', sa.String(length=100), nullable=True),
    sa.Column('max_profiles', sa.Integer(), nullable=True),
    sa.Column('max_ai_responses_per_month', sa.Integer(), nullable=True),
    sa.Column('message_retention_days', sa.Integer(), nullable=True),
    sa.Column('features', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_methods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stripe_payment_method_id', sa.String(length=100), nullable=False),
    sa.Column('stripe_customer_id', sa.String(length=100), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('card_brand', sa.String(length=20), nullable=True),
    sa.Column('card_last4', sa.String(length=4), nullable=True),
    sa.Column('card_exp_month', sa.Integer(), nullable=True),
    sa.Column('card_exp_year', sa.Integer(), nullable=True),
    sa.Column('card_country', sa.String(length=2), nullable=True),
    sa.Column('card_funding', sa.String(length=10), nullable=True),
    sa.Column('bank_last4', sa.String(length=4), nullable=True),
    sa.Column('bank_routing_number', sa.String(length=20), nullable=True),
    sa.Column('bank_account_type', sa.String(length=10), nullable=True),
    sa.Column('bank_name', sa.String(length=100), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('billing_name', sa.String(length=100), nullable=True),
    sa.Column('billing_email', sa.String(length=255), nullable=True),
    sa.Column('billing_phone', sa.String(length=20), nullable=True),
    sa.Column('billing_address_line1', sa.String(length=200), nullable=True),
    sa.Column('billing_address_line2', sa.String(length=200), nullable=True),
    sa.Column('billing_city', sa.String(length=100), nullable=True),
    sa.Column('billing_state', sa.String(length=100), nullable=True),
    sa.Column('billing_postal_code', sa.String(length=20), nullable=True),
    sa.Column('billing_country', sa.String(length=2), nullable=True),
    sa.Column('payment_metadata', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_payment_method_id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=100), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('current_period_start', sa.DateTime(), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=True),
    sa.Column('trial_start', sa.DateTime(), nullable=True),
    sa.Column('trial_end', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('profiles_used', sa.Integer(), nullable=True),
    sa.Column('ai_responses_used', sa.Integer(), nullable=True),
    sa.Column('monthly_ai_responses_used', sa.Integer(), nullable=True),
    sa.Column('last_usage_reset', sa.DateTime(), nullable=True),
    sa.Column('subscription_metadata', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('stripe_invoice_id', sa.String(length=100), nullable=True),
    sa.Column('invoice_number', sa.String(length=50), nullable=False),
    sa.Column('amount_due', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('amount_paid', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('tax_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('billing_reason', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('period_start', sa.DateTime(), nullable=True),
    sa.Column('period_end', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('voided_at', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('invoice_pdf_url', sa.String(length=500), nullable=True),
    sa.Column('hosted_invoice_url', sa.String(length=500), nullable=True),
    sa.Column('invoice_metadata', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number'),
    sa.UniqueConstraint('stripe_invoice_id')
    )
    op.create_table('invoice_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('stripe_invoice_item_id', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('unit_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('period_start', sa.DateTime(), nullable=True),
    sa.Column('period_end', sa.DateTime(), nullable=True),
    sa.Column('proration', sa.Boolean(), nullable=True),
    sa.Column('discount_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('usage_metrics')
    op.drop_table('system_health')
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('client_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('twilio_sid', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('message_metadata', sa.Text(), nullable=True))
        batch_op.alter_column('timestamp',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_messages_client_id'), ['client_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_is_incoming'), ['is_incoming'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_profile_id'), ['profile_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_sender_number'), ['sender_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_timestamp'), ['timestamp'], unique=False)
        batch_op.create_foreign_key(None, 'clients', ['client_id'], ['id'])
        batch_op.drop_column('conversation_turn')
        batch_op.drop_column('signalwire_sid')
        batch_op.drop_column('ai_fallback_used')
        batch_op.drop_column('ai_model_used')
        batch_op.drop_column('ai_processing_time')
        batch_op.drop_column('flagged')
        batch_op.drop_column('status_updated_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status_updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('flagged', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ai_processing_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ai_model_used', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ai_fallback_used', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('signalwire_sid', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('conversation_turn', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_messages_timestamp'))
        batch_op.drop_index(batch_op.f('ix_messages_sender_number'))
        batch_op.drop_index(batch_op.f('ix_messages_profile_id'))
        batch_op.drop_index(batch_op.f('ix_messages_is_incoming'))
        batch_op.drop_index(batch_op.f('ix_messages_client_id'))
        batch_op.alter_column('timestamp',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_column('message_metadata')
        batch_op.drop_column('twilio_sid')
        batch_op.drop_column('client_id')

    op.create_table('system_health',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('backend_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('llm_server_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('database_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('redis_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('signalwire_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('response_time_p95', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('memory_usage_percent', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cpu_usage_percent', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('disk_usage_percent', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('celery_queue_length', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('celery_failed_tasks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('webhook_error_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ai_generation_error_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('system_health_pkey'))
    )
    op.create_table('usage_metrics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('profile_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('messages_received', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('messages_sent', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ai_responses', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('auto_responses', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('avg_response_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('llm_server_requests', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('llm_server_failures', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('openai_fallback_usage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('flagged_messages', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('blocked_responses', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('high_risk_interactions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('unique_contacts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conversation_starts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conversation_length_avg', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], name=op.f('usage_metrics_profile_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('usage_metrics_pkey'))
    )
    op.drop_table('invoice_items')
    op.drop_table('invoices')
    op.drop_table('subscriptions')
    op.drop_table('payment_methods')
    op.drop_table('subscription_plans')
    # ### end Alembic commands ###
