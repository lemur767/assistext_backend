"""add trials

Revision ID: c0a8d1cec642
Revises: d20c12f67990
Create Date: 2025-07-20 13:28:25.848378

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c0a8d1cec642'
down_revision = 'd20c12f67990'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('flagged_messages')
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('from_number', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('to_number', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('body', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('message_type', sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column('external_id', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('thread_id', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('ai_processed', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('ai_response_generated', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('ai_confidence_score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('ai_processing_time', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('sent_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('received_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('delivered_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('failed_at', sa.DateTime(), nullable=True))
        batch_op.drop_index('ix_messages_client_id')
        batch_op.drop_index('ix_messages_message_sid')
        batch_op.drop_index('ix_messages_recipient_number')
        batch_op.drop_index('ix_messages_sender_number')
        batch_op.drop_index('ix_messages_timestamp')
        batch_op.drop_index('ix_messages_user_id')
        batch_op.create_index(batch_op.f('ix_messages_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_external_id'), ['external_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_messages_from_number'), ['from_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_thread_id'), ['thread_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_to_number'), ['to_number'], unique=False)
        batch_op.drop_constraint('messages_client_id_fkey', type_='foreignkey')
        batch_op.drop_column('message_sid')
        batch_op.drop_column('related_message_sid')
        batch_op.drop_column('message_body')
        batch_op.drop_column('is_flagged')
        batch_op.drop_column('recipient_number')
        batch_op.drop_column('sender_number')
        batch_op.drop_column('client_id')
        batch_op.drop_column('is_ai_generated')
        batch_op.drop_column('is_read')
        batch_op.drop_column('timestamp')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('is_ai_generated', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('sender_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('recipient_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('is_flagged', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('message_body', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('related_message_sid', sa.VARCHAR(length=34), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('message_sid', sa.VARCHAR(length=34), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('messages_client_id_fkey', 'clients', ['client_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_messages_to_number'))
        batch_op.drop_index(batch_op.f('ix_messages_thread_id'))
        batch_op.drop_index(batch_op.f('ix_messages_from_number'))
        batch_op.drop_index(batch_op.f('ix_messages_external_id'))
        batch_op.drop_index(batch_op.f('ix_messages_created_at'))
        batch_op.create_index('ix_messages_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_messages_timestamp', ['timestamp'], unique=False)
        batch_op.create_index('ix_messages_sender_number', ['sender_number'], unique=False)
        batch_op.create_index('ix_messages_recipient_number', ['recipient_number'], unique=False)
        batch_op.create_index('ix_messages_message_sid', ['message_sid'], unique=False)
        batch_op.create_index('ix_messages_client_id', ['client_id'], unique=False)
        batch_op.drop_column('failed_at')
        batch_op.drop_column('delivered_at')
        batch_op.drop_column('received_at')
        batch_op.drop_column('sent_at')
        batch_op.drop_column('ai_processing_time')
        batch_op.drop_column('ai_confidence_score')
        batch_op.drop_column('ai_response_generated')
        batch_op.drop_column('ai_processed')
        batch_op.drop_column('thread_id')
        batch_op.drop_column('external_id')
        batch_op.drop_column('message_type')
        batch_op.drop_column('body')
        batch_op.drop_column('to_number')
        batch_op.drop_column('from_number')

    op.create_table('flagged_messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('message_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reason', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('severity', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_reviewed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('reviewed_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('review_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('detection_method', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('confidence_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('flagged_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('reviewed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], name='flagged_messages_message_id_fkey'),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], name='flagged_messages_reviewed_by_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='flagged_messages_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='flagged_messages_pkey')
    )
    # ### end Alembic commands ###
