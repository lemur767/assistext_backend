"""Fresh Start

Revision ID: d20c12f67990
Revises: 
Create Date: 2025-07-10 16:33:54.518617

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd20c12f67990'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('billing_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('auto_pay', sa.Boolean(), nullable=True),
    sa.Column('billing_email', sa.String(length=255), nullable=True),
    sa.Column('billing_address', sa.JSON(), nullable=True),
    sa.Column('invoice_delivery', sa.String(length=20), nullable=True),
    sa.Column('invoice_format', sa.String(length=10), nullable=True),
    sa.Column('notifications', sa.JSON(), nullable=True),
    sa.Column('usage_alert_thresholds', sa.JSON(), nullable=True),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('tax_exempt', sa.Boolean(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('locale', sa.String(length=10), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('bill_set_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('credit_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('balance_after', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('reference_id', sa.String(length=50), nullable=True),
    sa.Column('reference_type', sa.String(length=20), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('trans_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.Column('payment_method_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('transaction_id', sa.String(length=100), nullable=True),
    sa.Column('processor_response', sa.JSON(), nullable=True),
    sa.Column('refunded_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('refund_reason', sa.Text(), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(length=100), nullable=True),
    sa.Column('stripe_invoice_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('pay_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['payment_method_id'], ['payment_methods.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_payment_intent_id')
    )
    with op.batch_alter_table('profile', schema=None) as batch_op:
        batch_op.drop_index('ix_profile_phone_number_sid')

    op.drop_table('profile')
    op.drop_table('user_clients')
    with op.batch_alter_table('clients', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('first_contact', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('last_contact', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('total_messages', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('client_type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('source', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_blocked', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=True))
        batch_op.create_index(batch_op.f('ix_clients_phone_number'), ['phone_number'], unique=True)

    with op.batch_alter_table('invoice_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('inv_item_metadata', sa.JSON(), nullable=True))
        batch_op.alter_column('description',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=255),
               existing_nullable=False)

    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('discount_amount', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('total', sa.Numeric(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('inv_metadata', sa.JSON(), nullable=True))
        batch_op.alter_column('subscription_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('description')
        batch_op.drop_column('invoice_metadata')
        batch_op.drop_column('invoice_pdf_url')
        batch_op.drop_column('hosted_invoice_url')
        batch_op.drop_column('voided_at')
        batch_op.drop_column('billing_reason')

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('message_sid', sa.String(length=34), nullable=True))
        batch_op.add_column(sa.Column('message_body', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('sender_number', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('recipient_number', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('is_ai_generated', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_read', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_flagged', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('related_message_sid', sa.String(length=34), nullable=True))
        batch_op.add_column(sa.Column('retry_count', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('timestamp', sa.DateTime(), nullable=True))
        batch_op.alter_column('client_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('direction',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=10),
               existing_nullable=False)
        batch_op.drop_index('ix_messages_created_at')
        batch_op.drop_constraint('messages_signalwire_sid_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_messages_client_id'), ['client_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_message_sid'), ['message_sid'], unique=True)
        batch_op.create_index(batch_op.f('ix_messages_recipient_number'), ['recipient_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_sender_number'), ['sender_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_user_id'), ['user_id'], unique=False)
        batch_op.drop_column('was_ai_generated')
        batch_op.drop_column('to_number')
        batch_op.drop_column('signalwire_sid')
        batch_op.drop_column('content')
        batch_op.drop_column('ai_confidence')
        batch_op.drop_column('ai_model_used')
        batch_op.drop_column('read_at')
        batch_op.drop_column('from_number')
        batch_op.drop_column('replied_at')
        batch_op.drop_column('ai_processing_time')

    with op.batch_alter_table('payment_methods', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('billing_address', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('pm_metadata', sa.JSON(), nullable=True))
        batch_op.alter_column('stripe_payment_method_id',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.drop_column('is_active')
        batch_op.drop_column('billing_address_line2')
        batch_op.drop_column('bank_routing_number')
        batch_op.drop_column('card_country')
        batch_op.drop_column('billing_name')
        batch_op.drop_column('billing_address_line1')
        batch_op.drop_column('billing_postal_code')
        batch_op.drop_column('billing_phone')
        batch_op.drop_column('billing_email')
        batch_op.drop_column('billing_country')
        batch_op.drop_column('bank_account_type')
        batch_op.drop_column('payment_metadata')
        batch_op.drop_column('billing_city')
        batch_op.drop_column('billing_state')
        batch_op.drop_column('card_funding')

    with op.batch_alter_table('subscription_plans', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('monthly_price', sa.Numeric(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('annual_price', sa.Numeric(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('currency', sa.String(length=3), nullable=True))
        batch_op.add_column(sa.Column('setup_fee', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('trial_period_days', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('popular', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('recommended', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('category', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('sub_plan_metadata', sa.JSON(), nullable=True))
        batch_op.alter_column('features',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               nullable=False)
        batch_op.drop_column('sort_order')
        batch_op.drop_column('is_active')
        batch_op.drop_column('stripe_price_id_yearly')
        batch_op.drop_column('price_yearly')
        batch_op.drop_column('max_ai_responses_per_month')
        batch_op.drop_column('max_profiles')
        batch_op.drop_column('message_retention_days')
        batch_op.drop_column('stripe_price_id_monthly')
        batch_op.drop_column('price_monthly')

    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('billing_cycle', sa.String(length=10), nullable=False))
        batch_op.add_column(sa.Column('auto_renew', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('canceled_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('pause_until', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('currency', sa.String(length=3), nullable=True))
        batch_op.add_column(sa.Column('discount_amount', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('tax_amount', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('cancellation_reason', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('pause_reason', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('sub_metadata', sa.JSON(), nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.drop_column('last_usage_reset')
        batch_op.drop_column('trial_start')
        batch_op.drop_column('profiles_used')
        batch_op.drop_column('ai_responses_used')
        batch_op.drop_column('subscription_metadata')
        batch_op.drop_column('monthly_ai_responses_used')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('signalwire_webhook_configured')
        batch_op.drop_column('out_of_office_message')
        batch_op.drop_column('ai_model')
        batch_op.drop_column('monthly_message_count')
        batch_op.drop_column('last_reset_date')
        batch_op.drop_column('business_hours')
        batch_op.drop_column('display_name')
        batch_op.drop_column('ai_personality')
        batch_op.drop_column('auto_reply_enabled')
        batch_op.drop_column('ai_max_tokens')
        batch_op.drop_column('text_examples')
        batch_op.drop_column('ai_instructions')
        batch_op.drop_column('ai_temperature')
        batch_op.drop_column('auto_reply_keywords')
        batch_op.drop_column('timezone')
        batch_op.drop_column('total_messages_sent')
        batch_op.drop_column('ai_enabled')
        batch_op.drop_column('signalwire_project_id')
        batch_op.drop_column('total_messages_received')
        batch_op.drop_column('signalwire_phone_number')
        batch_op.drop_column('out_of_office_enabled')
        batch_op.drop_column('daily_message_limit')
        batch_op.drop_column('signalwire_space_url')
        batch_op.drop_column('signalwire_auth_token')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('signalwire_auth_token', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('signalwire_space_url', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('daily_message_limit', sa.INTEGER(), server_default=sa.text('100'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('out_of_office_enabled', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('signalwire_phone_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('total_messages_received', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('signalwire_project_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ai_enabled', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('total_messages_sent', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('timezone', sa.VARCHAR(length=50), server_default=sa.text("'UTC'::character varying"), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('auto_reply_keywords', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ai_temperature', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text('0.7'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ai_instructions', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('text_examples', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ai_max_tokens', sa.INTEGER(), server_default=sa.text('150'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('auto_reply_enabled', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ai_personality', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('display_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('business_hours', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('last_reset_date', sa.DATE(), server_default=sa.text('CURRENT_DATE'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('monthly_message_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ai_model', sa.VARCHAR(length=50), server_default=sa.text("'gpt-3.5-turbo'::character varying"), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('out_of_office_message', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('signalwire_webhook_configured', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))

    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('monthly_ai_responses_used', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('subscription_metadata', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ai_responses_used', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('profiles_used', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('trial_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('last_usage_reset', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.drop_column('sub_metadata')
        batch_op.drop_column('pause_reason')
        batch_op.drop_column('cancellation_reason')
        batch_op.drop_column('tax_amount')
        batch_op.drop_column('discount_amount')
        batch_op.drop_column('currency')
        batch_op.drop_column('amount')
        batch_op.drop_column('pause_until')
        batch_op.drop_column('canceled_at')
        batch_op.drop_column('auto_renew')
        batch_op.drop_column('billing_cycle')

    with op.batch_alter_table('subscription_plans', schema=None) as batch_op:
        batch_op.add_column(sa.Column('price_monthly', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('stripe_price_id_monthly', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('message_retention_days', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('max_profiles', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('max_ai_responses_per_month', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('price_yearly', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('stripe_price_id_yearly', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('sort_order', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.alter_column('features',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.drop_column('sub_plan_metadata')
        batch_op.drop_column('category')
        batch_op.drop_column('recommended')
        batch_op.drop_column('popular')
        batch_op.drop_column('trial_period_days')
        batch_op.drop_column('setup_fee')
        batch_op.drop_column('currency')
        batch_op.drop_column('annual_price')
        batch_op.drop_column('monthly_price')
        batch_op.drop_column('status')

    with op.batch_alter_table('payment_methods', schema=None) as batch_op:
        batch_op.add_column(sa.Column('card_funding', sa.VARCHAR(length=10), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('billing_state', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('billing_city', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('payment_metadata', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('bank_account_type', sa.VARCHAR(length=10), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('billing_country', sa.VARCHAR(length=2), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('billing_email', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('billing_phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('billing_postal_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('billing_address_line1', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('billing_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('card_country', sa.VARCHAR(length=2), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('bank_routing_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('billing_address_line2', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.alter_column('stripe_payment_method_id',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.drop_column('pm_metadata')
        batch_op.drop_column('billing_address')
        batch_op.drop_column('status')

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ai_processing_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('replied_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('from_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('read_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ai_model_used', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ai_confidence', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('signalwire_sid', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('to_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('was_ai_generated', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_messages_user_id'))
        batch_op.drop_index(batch_op.f('ix_messages_timestamp'))
        batch_op.drop_index(batch_op.f('ix_messages_sender_number'))
        batch_op.drop_index(batch_op.f('ix_messages_recipient_number'))
        batch_op.drop_index(batch_op.f('ix_messages_message_sid'))
        batch_op.drop_index(batch_op.f('ix_messages_client_id'))
        batch_op.create_unique_constraint('messages_signalwire_sid_key', ['signalwire_sid'])
        batch_op.create_index('ix_messages_created_at', ['created_at'], unique=False)
        batch_op.alter_column('direction',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('client_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('timestamp')
        batch_op.drop_column('retry_count')
        batch_op.drop_column('related_message_sid')
        batch_op.drop_column('is_flagged')
        batch_op.drop_column('is_read')
        batch_op.drop_column('is_ai_generated')
        batch_op.drop_column('recipient_number')
        batch_op.drop_column('sender_number')
        batch_op.drop_column('message_body')
        batch_op.drop_column('message_sid')

    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('billing_reason', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('voided_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('hosted_invoice_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('invoice_pdf_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('invoice_metadata', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('subscription_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('inv_metadata')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('total')
        batch_op.drop_column('discount_amount')
        batch_op.drop_column('subtotal')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('invoice_items', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=500),
               existing_nullable=False)
        batch_op.drop_column('inv_item_metadata')

    with op.batch_alter_table('clients', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_clients_phone_number'))
        batch_op.drop_column('is_verified')
        batch_op.drop_column('is_blocked')
        batch_op.drop_column('is_active')
        batch_op.drop_column('source')
        batch_op.drop_column('client_type')
        batch_op.drop_column('total_messages')
        batch_op.drop_column('last_contact')
        batch_op.drop_column('first_contact')
        batch_op.drop_column('notes')
        batch_op.drop_column('email')

    op.create_table('user_clients',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_blocked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_favorite', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='user_clients_client_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_clients_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'client_id', name='user_clients_pkey')
    )
    op.create_table('profile',
    sa.Column('profile_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('phone_number_sid', sa.VARCHAR(length=34), autoincrement=False, nullable=True),
    sa.Column('friendly_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('display_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('timezone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('signalwire_phone_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('signalwire_project_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('signalwire_auth_token', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('signalwire_space_url', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('signalwire_webhook_configured', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('business_hours', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('auto_reply_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('out_of_office_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('out_of_office_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('daily_message_limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ai_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('ai_personality', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ai_instructions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ai_model', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ai_temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ai_max_tokens', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_messages_sent', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_messages_received', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('monthly_message_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_reset_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('profile_id', name='profile_pkey'),
    sa.UniqueConstraint('email', name='profile_email_key'),
    sa.UniqueConstraint('signalwire_phone_number', name='profile_signalwire_phone_number_key'),
    sa.UniqueConstraint('username', name='profile_username_key')
    )
    with op.batch_alter_table('profile', schema=None) as batch_op:
        batch_op.create_index('ix_profile_phone_number_sid', ['phone_number_sid'], unique=False)

    op.drop_table('payments')
    op.drop_table('credit_transactions')
    op.drop_table('billing_settings')
    # ### end Alembic commands ###
